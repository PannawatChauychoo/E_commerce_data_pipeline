-- Create schema for Walmart simulation data
DROP SCHEMA IF EXISTS WALMART CASCADE;
CREATE SCHEMA IF NOT EXISTS WALMART;

-- Customer Type 1 (Walmart Customer) demographics
CREATE TABLE IF NOT EXISTS WALMART.CUST1 (
    UNIQUE_ID INTEGER PRIMARY KEY NOT NULL,
    AGE INT,
    GENDER VARCHAR(10),
    CITY_CATEGORY VARCHAR(20),
    STAY_IN_CURRENT_CITY_YEARS VARCHAR(10),
    MARITAL_STATUS VARCHAR(10),
    SEGMENT_ID INTEGER,
    VISIT_PROB FLOAT,
    RUN_ID VARCHAR(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Customer Type 2 (E-commerce) demographics
CREATE TABLE IF NOT EXISTS WALMART.CUST2 (
    UNIQUE_ID INTEGER PRIMARY KEY NOT NULL,
    BRANCH VARCHAR(50),
    CITY VARCHAR(50),
    CUSTOMER_TYPE VARCHAR(20),
    GENDER VARCHAR(10),
    PAYMENT_METHOD VARCHAR(20),
    RUN_ID VARCHAR(20),
    SEGMENT_ID INTEGER,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS WALMART.PRODUCTS (
    PRODUCT_ID INTEGER PRIMARY KEY NOT NULL,
    CATEGORY VARCHAR(100) NOT NULL,
    UNIT_PRICE FLOAT NOT NULL,
    STOCK INTEGER,
    LEAD_DAYS INTEGER,
    ORDERING_COST FLOAT,
    HOLDING_COST_PER_UNIT FLOAT,
    EOQ FLOAT,
    RUN_ID VARCHAR(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS WALMART.CUSTOMERS_LOOKUP (
    CUSTOMER_ID SERIAL PRIMARY KEY,
    CUST1_ID INTEGER NULL,
    CUST2_ID INTEGER NULL,
    SEGMENT_ID INTEGER NULL,
    RUN_ID VARCHAR(20),

    CONSTRAINT CUST1_ID_UNIQUE UNIQUE (CUST1_ID),
    CONSTRAINT CUST2_ID_UNIQUE UNIQUE (CUST2_ID),

    CONSTRAINT FK_LOOKUP_CUST1 FOREIGN KEY (
        CUST1_ID
    ) REFERENCES WALMART.CUST1 (UNIQUE_ID) ON DELETE CASCADE,

    CONSTRAINT FK_LOOKUP_CUST2 FOREIGN KEY (
        CUST2_ID
    ) REFERENCES WALMART.CUST2 (UNIQUE_ID) ON DELETE CASCADE,

    CONSTRAINT custid_exist CHECK ((cust1_id IS NULL) <> (cust2_id IS NULL)) -- noqa
);


-- Combined transactions table for both customer types
CREATE TABLE IF NOT EXISTS WALMART.TRANSACTIONS (
    TRANSACTION_ID INTEGER PRIMARY KEY,
    UNIQUE_ID INTEGER REFERENCES WALMART.CUSTOMERS_LOOKUP (CUSTOMER_ID),
    PRODUCT_ID INTEGER REFERENCES WALMART.PRODUCTS (PRODUCT_ID),
    UNIT_PRICE FLOAT,
    QUANTITY INTEGER,
    DATE_PURCHASED DATE,
    CATEGORY VARCHAR(100),
    RUN_ID VARCHAR(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS IDX_TRANSACTIONS_CATEGORY ON WALMART.TRANSACTIONS (
    CATEGORY
);
CREATE INDEX IF NOT EXISTS IDX_TRANSACTIONS_PRODUCT ON WALMART.TRANSACTIONS (
    PRODUCT_ID
);
CREATE INDEX IF NOT EXISTS IDX_TRANSACTIONS_CUSTOMER ON WALMART.TRANSACTIONS (
    UNIQUE_ID
);
CREATE INDEX IF NOT EXISTS IDX_TRANSACTIONS_DATE ON WALMART.TRANSACTIONS (
    DATE_PURCHASED
);

CREATE UNIQUE INDEX IF NOT EXISTS IDX_LOOKUP_CUST1 ON WALMART.CUSTOMERS_LOOKUP (
    CUST1_ID
);

CREATE UNIQUE INDEX IF NOT EXISTS IDX_LOOKUP_CUST2 ON WALMART.CUSTOMERS_LOOKUP (
    CUST2_ID
);
