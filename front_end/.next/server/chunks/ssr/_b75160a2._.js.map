{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/PipelineVisualization.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  Database, \n  GitBranch, \n  LineChart, \n  Brain, \n  ArrowRight,\n  BarChart3,\n  Sparkles\n} from 'lucide-react';\n\nconst PipelineStep = ({ icon: Icon, title, description }: { \n  icon: React.ElementType;\n  title: string;\n  description: string;\n}) => (\n  <div className=\"flex flex-col items-center p-4\">\n    <div className=\"bg-primary/10 p-4 rounded-full\">\n      <Icon className=\"w-8 h-8 text-primary\" />\n    </div>\n    <h3 className=\"mt-2 font-semibold\">{title}</h3>\n    <p className=\"text-sm text-muted-foreground text-center\">{description}</p>\n  </div>\n);\n\nconst PipelineVisualization = () => {\n  const steps = [\n    {\n      icon: Brain,\n      title: \"ABM Simulation\",\n      description: \"Generate synthetic purchase data\"\n    },\n    {\n      icon: Database,\n      title: \"PostgreSQL\",\n      description: \"Store transaction data\"\n    },\n    {\n      icon: GitBranch,\n      title: \"ETL with DBT\",\n      description: \"Transform and model data\"\n    },\n    {\n      icon: BarChart3,\n      title: \"Analytics\",\n      description: \"Process and analyze data\"\n    },\n    {\n      icon: Sparkles,\n      title: \"Dashboard\",\n      description: \"Visualize insights\"\n    }\n  ];\n\n  return (\n    <div className=\"w-full max-w-5xl mx-auto p-8\">\n      <div className=\"flex items-center justify-between\">\n        {steps.map((step, index) => (\n          <React.Fragment key={step.title}>\n            <PipelineStep {...step} />\n            {index < steps.length - 1 && (\n              <ArrowRight className=\"w-6 h-6 text-muted-foreground\" />\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PipelineVisualization; "],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAUA,MAAM,eAAe,CAAC,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,WAAW,EAIrD,iBACC,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;;;;;;;;;;;0BAElB,8OAAC;gBAAG,WAAU;0BAAsB;;;;;;0BACpC,8OAAC;gBAAE,WAAU;0BAA6C;;;;;;;;;;;;AAI9D,MAAM,wBAAwB;IAC5B,MAAM,QAAQ;QACZ;YACE,MAAM,oMAAA,CAAA,QAAK;YACX,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM,0MAAA,CAAA,WAAQ;YACd,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM,gNAAA,CAAA,YAAS;YACf,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM,kNAAA,CAAA,YAAS;YACf,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM,0MAAA,CAAA,WAAQ;YACd,OAAO;YACP,aAAa;QACf;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC,qMAAA,CAAA,UAAK,CAAC,QAAQ;;sCACb,8OAAC;4BAAc,GAAG,IAAI;;;;;;wBACrB,QAAQ,MAAM,MAAM,GAAG,mBACtB,8OAAC,kNAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;;mBAHL,KAAK,KAAK;;;;;;;;;;;;;;;AAUzC;uCAEe","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } "],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/app/page.tsx"],"sourcesContent":["import PipelineVisualization from '@/components/PipelineVisualization';\nimport { Button } from '@/components/ui/button';\n\nexport default function Home() {\n  return (\n    <main className=\"min-h-screen bg-background\">\n      <div className=\"container mx-auto px-4 py-16\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold tracking-tight mb-4\">\n            Walmart E-commerce Simulation\n          </h1>\n          <p className=\"text-xl text-muted-foreground\">\n            A comprehensive data pipeline simulation from data generation to visualization\n          </p>\n        </div>\n        \n        <PipelineVisualization />\n        \n        <div className=\"text-center mt-12\">\n          <Button size=\"lg\" className=\"mr-4\">\n            View Dashboard\n          </Button>\n          <Button variant=\"outline\" size=\"lg\">\n            Documentation\n          </Button>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCAGvD,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;8BAK/C,8OAAC,oIAAA,CAAA,UAAqB;;;;;8BAEtB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,2HAAA,CAAA,SAAM;4BAAC,MAAK;4BAAK,WAAU;sCAAO;;;;;;sCAGnC,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,MAAK;sCAAK;;;;;;;;;;;;;;;;;;;;;;;AAO9C","debugId":null}}]
}