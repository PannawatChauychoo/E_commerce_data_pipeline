{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nconst Header = () => {\n  const pathname = usePathname();\n\n  const navItems = [\n    { name: 'Home', href: '/' },\n    { name: 'Dashboard', href: '/dashboard/trends' },\n    { name: 'Documentation', href: '/docs' },\n  ];\n\n  return (\n    <header className=\"bg-[#222831] shadow-md sticky top-0 z-50 w-full\">\n      <div className=\"container mx-auto px-4 h-16 flex items-center justify-between text-white\">\n        <div className=\"text-xl font-bold text-white\">\n          <a\n            href=\"https://www.linkedin.com/in/pan2024/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-[#DFD0B8] hover:text-white transition-colors\"\n          >\n            Walmart E-Commerce Simulation by Pannawat\n          </a>\n        </div>\n        <nav>\n          <ul className=\"flex space-x-6\">\n            {navItems.map((item) => (\n              <li key={item.href}>\n                <Link\n                  href={item.href}\n                  className={`text-md font-semibold transition-colors ${pathname === item.href\n                    ? 'text-white underline underline-offset-6'\n                    : 'text-[#DFD0B8] hover:text-white'\n                    }`}\n                >\n                  {item.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header; \n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,SAAS;IACb,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,WAAW;QACf;YAAE,MAAM;YAAQ,MAAM;QAAI;QAC1B;YAAE,MAAM;YAAa,MAAM;QAAoB;QAC/C;YAAE,MAAM;YAAiB,MAAM;QAAQ;KACxC;IAED,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,MAAK;wBACL,QAAO;wBACP,KAAI;wBACJ,WAAU;kCACX;;;;;;;;;;;8BAIH,8OAAC;8BACC,cAAA,8OAAC;wBAAG,WAAU;kCACX,SAAS,GAAG,CAAC,CAAC,qBACb,8OAAC;0CACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MAAM,KAAK,IAAI;oCACf,WAAW,CAAC,wCAAwC,EAAE,aAAa,KAAK,IAAI,GACxE,4CACA,mCACA;8CAEH,KAAK,IAAI;;;;;;+BARL,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBhC;uCAEe","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///Users/macos/Personal_projects/Portfolio/Project_1_Walmart/Walmart_sim/front_end/components/SimulationVisualization.tsx"],"sourcesContent":["// SimulationVisualization.tsx\n\"use client\";\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  ResponsiveContainer,\n  LineChart as RLineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  BarChart as RBarChart,\n  Bar,\n  Cell,\n} from \"recharts\";\n\n\n/* ---------- Color system ---------- */\nconst C = {\n  bg: \"#222831\",    // darkest (card/chart bg)\n  grid: \"#393E46\",  // subdued grid\n  axis: \"#DFD0B8\",  // light text/ticks\n  accent1: \"#FBBF24\", // amber-400\n  accent2: \"#F97316\", // orange-500\n  accent3: \"#EF4444\", // red-500\n  tipBg: \"#393E46\",\n  tipBorder: \"#948979\",\n};\n\n/* ---------- Types ---------- */\ntype SimInputs = {\n  start_date: string;\n  max_steps: number;\n  n_customers1: number;\n  n_customers2: number;\n  n_products_per_category: number;\n};\n\n/** Raw step payload as returned by your model.step() on the server */\ntype StepMetricsRaw = {\n  step: number;\n  cust1_avg_purchase: number;\n  cust2_avg_purchase: number;\n  total_daily_purchases: number;\n  total_cust1: number;\n  total_cust2: number;\n  total_products: number;\n  stockout_rate: number;\n};\n\n\n// Choosing colors for barchart\nconst getBarColor = (name: string) => {\n  switch (name) {\n    case \"Customers1\":\n      return C.accent2; // \"#F97316\" - Orange-500\n    case \"Customers2\":\n      return C.accent3; // \"#EF4444\" - Red-500\n    case \"Products\":\n      return C.accent1; // \"#FBBF24\" - Amber-400\n    default:\n      return C.accent1; // Fallback to amber\n  }\n};\n\n\n/* ---------- Helpers ---------- */\nfunction fmtElapsed(seconds: number): string {\n  const m = Math.floor(seconds / 60);\n  const s = seconds % 60;\n  return `${m}:${s.toString().padStart(2, \"0\")}`;\n}\n\nfunction addDays(isoYYYYMMDD: string, delta: number): string {\n  const d = new Date(isoYYYYMMDD + \"T00:00:00\");\n  if (Number.isNaN(d.getTime())) return isoYYYYMMDD;\n  d.setDate(d.getDate() + delta);\n  return d.toISOString().slice(0, 10);\n}\n\n// Convert YYYY-MM-DD to YYYYMMDD\nfunction formatDateForAPI(dateStr: string): string {\n  return dateStr.replace(/-/g, '');\n}\n\n// Convert YYYYMMDD to YYYY-MM-DD\nfunction formatDateForInput(dateStr: string): string {\n  if (dateStr.length === 8) {\n    return `${dateStr.slice(0, 4)}-${dateStr.slice(4, 6)}-${dateStr.slice(6, 8)}`;\n  }\n  return dateStr;\n}\n\n/* ---------- Component ---------- */\nexport default function SimulationWorkspace() {\n  /* Inputs (left panel) */\n  const [inputs, setInputs] = useState<SimInputs>({\n    max_steps: 7,\n    n_customers1: 100,\n    n_customers2: 100,\n    start_date: '2025-01-01',\n    n_products_per_category: 5,\n  });\n\n  /* Run state */\n  const [running, setRunning] = useState(false);\n  const [runId, setRunId] = useState<string | null>(null);\n  const [elapsed, setElapsed] = useState<number>(0); // seconds\n  const [series, setSeries] = useState<StepMetricsRaw[]>([]);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  /* Timers */\n\n  const pollRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  const labelRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n\n  /* Error handler */\n  const errRef = useRef<HTMLDivElement>(null);\n  const debugRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (errRef.current) errRef.current.scrollTop = errRef.current.scrollHeight;\n  }, [errorMsg]);\n\n  useEffect(() => {\n    if (debugRef.current) debugRef.current.scrollTop = debugRef.current.scrollHeight;\n  }, [series.length, runId]);\n\n\n  /* Derived series for charts */\n  const avgPurchasesSeries = useMemo(\n    () =>\n      series.map((d) => ({\n        label: addDays(inputs.start_date, Math.max(0, (d.step ?? 1) - 1)),\n        cust1: Number(d.cust1_avg_purchase ?? 0),\n        cust2: Number(d.cust2_avg_purchase ?? 0),\n      })),\n    [series, inputs.start_date]\n  );\n\n  const totalPurchasesSeries = useMemo(\n    () =>\n      series.map((d) => ({\n        label: addDays(inputs.start_date, Math.max(0, (d.step ?? 1) - 1)),\n        value: Number(d.total_daily_purchases ?? 0),\n      })),\n    [series, inputs.start_date]\n  );\n\n  const stockoutSeries = useMemo(\n    () =>\n      series.map((d) => ({\n        label: addDays(inputs.start_date, Math.max(0, (d.step ?? 1) - 1)),\n        value: Number(d.stockout_rate ?? 0),\n      })),\n    [series, inputs.start_date]\n  );\n\n  const totalsBar = useMemo(() => {\n    const last = series.at(-1);\n    const totalCustomers1 = Number(last?.total_cust1 ?? 0)\n    const totalCustomers2 = Number(last?.total_cust2 ?? 0);\n    const totalProducts = Number(last?.total_products ?? inputs.n_products_per_category);\n    return [\n      { name: \"Customers1\", value: totalCustomers1 || inputs.n_customers1 },\n      { name: \"Customers2\", value: totalCustomers2 || inputs.n_customers2 },\n      { name: \"Products\", value: totalProducts || inputs.n_products_per_category * 34 },\n    ];\n  }, [series, inputs]);\n\n  /* Input handler */\n  const onChange =\n    (key: keyof SimInputs) =>\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const v = e.target.value;\n        setInputs((s) => ({\n          ...s,\n          [key]:\n            key === \"start_date\"\n              ? v\n              : Number.parseInt(v, 10),\n        }));\n      };\n\n  /* Reset logic (replaces Stop) */\n  const reset = useCallback(async () => {\n    if (pollRef.current) clearInterval(pollRef.current);\n    if (labelRef.current) clearInterval(labelRef.current);\n    pollRef.current = null;\n    labelRef.current = null;\n\n    if (runId) {\n      // Ask backend to stop & clear; ignore errors\n      try {\n        await fetch(`/api/simulate/${runId}`, { method: \"DELETE\" });\n      } catch {\n        /* noop */\n      }\n    }\n    setRunId(null);\n    setElapsed(0);\n    setRunning(false);\n    setSeries([]);\n    setErrorMsg(null);\n  }, [runId]);\n\n  /* Cleanup on unmount */\n  useEffect(() => {\n    return () => {\n      if (pollRef.current) clearInterval(pollRef.current);\n      if (labelRef.current) clearInterval(labelRef.current);\n    };\n  }, []);\n\n  const getCSRFCookie = () => {\n    const m = document.cookie.match(/(?:^|;)\\s*csrftoken=([^;]+)/);\n    return m ? decodeURIComponent(m[1]) : null;\n  };\n\n  type ProgressResponse = {\n    data: Array<{ step: number;[k: string]: any }>;\n    finished: boolean;\n    error?: string | null;\n  };\n\n  const clearTimers = () => {\n    if (labelRef.current !== null) { clearInterval(labelRef.current); labelRef.current = null; }\n    if (pollRef.current !== null) { clearInterval(pollRef.current); pollRef.current = null; }\n  };\n\n  /* Start a run: submit -> timer; poll until finished */\n  const start = async () => {\n    // ---- early cleanup to prevent stacked timers if user clicks twice\n    clearTimers();\n\n    console.log(\"Starting simulation with inputs:\", inputs);\n    setSeries([]);\n    setErrorMsg(null);\n    setRunning(true);\n    setElapsed(0);\n\n    // Button timer\n    const t0 = Date.now();\n    labelRef.current = setInterval(() => {\n      setElapsed(Math.floor((Date.now() - t0) / 1000));\n    }, 250);\n\n    const payload = {\n      ...inputs,\n      // ensure API gets YYYYMMDD\n      start_date: formatDateForAPI(inputs.start_date),\n    };\n\n    // derive max steps from either max_steps or days\n    const maxSteps = Number(payload.max_steps ?? 0);\n\n    // ---- Kick off backend run\n    try {\n      const csrf = getCSRFCookie();\n      const res = await fetch(\"http://localhost:8000/api/simulate/\", {\n        method: \"POST\",\n        credentials: \"include\",           // allow cookies/session\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...(csrf ? { \"X-CSRFToken\": csrf } : {}),\n        },\n        body: JSON.stringify(payload),\n      });\n\n      console.log(\"Response status:\", res.status);\n\n      if (!res.ok) throw new Error((await res.text()) || `Server error: ${res.status}`);\n\n      const { run_id } = await res.json();\n      console.log(\"Run started:\", run_id);\n      setRunId(run_id);\n\n      // ---- Polling\n      let since = 0;\n      pollRef.current = setInterval(async () => {\n        try {\n          const r = await fetch(`http://localhost:8000/api/simulate/${run_id}?since=${since}`, {\n            credentials: \"include\",\n            headers: { \"Accept\": \"application/json\" },\n          });\n\n          if (!r.ok) {\n            const msg = await r.text();\n            throw new Error(msg || `Polling failed: ${r.status}`);\n          }\n\n          const { data, finished, error }: ProgressResponse = await r.json();\n\n          if (Array.isArray(data) && data.length) {\n            setSeries(prev => {\n              // dedupe in case server re-sends the last item\n              const next = [...prev];\n              for (const d of data) {\n                //@ts-expect-error\n                if (!next.length || d.step > next[next.length - 1].step) next.push(d);\n              }\n              since = next[next.length - 1]?.step ?? since; // advance cursor\n              return next;\n            });\n          }\n\n          const gotAll = maxSteps > 0 && since >= maxSteps;\n          if (finished || gotAll || error) {\n            clearTimers();\n            setRunning(false);\n            if (error) setErrorMsg(error);\n          }\n        } catch (err: any) {\n          console.error(\"Polling error:\", err);\n          clearTimers();\n          setRunning(false);\n          setErrorMsg(err?.message ?? \"Polling error\");\n        }\n      }, 600);\n    } catch (e: any) {\n      clearTimers();\n      setRunning(false);\n      setErrorMsg(e?.message ?? \"Failed to start\");\n    }\n  };\n\n  /* ---------- UI ---------- */\n  const inputClass =\n    \"bg-[#393E46] border-[#948979] text-[#DFD0B8] placeholder:text-[#DFD0B8]/60 focus-visible:ring-[#FBBF24] focus-visible:ring-2\";\n\n  const tooltipProps = {\n    contentStyle: { backgroundColor: C.tipBg, borderColor: C.tipBorder, color: C.axis },\n    labelStyle: { color: C.axis },\n    itemStyle: { color: C.axis },\n  } as const;\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6 py-6\">\n      {/* Left panel: inputs + controls */}\n      <Card className=\"border-[#948979] bg-[#222831] lg:col-span-4 text-[#DFD0B8]\">\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Simulation Inputs</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"start_date\">Start Date</Label>\n            <Input\n              id=\"start_date\"\n              type=\"date\"\n              value={inputs.start_date}\n              onChange={onChange(\"start_date\")}\n              className={inputClass}\n            />\n            <small className=\"text-xs text-gray-400\">\n              Will be sent as: {formatDateForAPI(inputs.start_date)}\n            </small>\n          </div>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"days\">Days</Label>\n            <Input\n              id=\"days\"\n              type=\"number\"\n              min={1}\n              value={inputs.max_steps}\n              onChange={onChange(\"max_steps\")}\n              className={inputClass}\n            />\n          </div>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"n_customers1\">Total Customers (type 1)</Label>\n            <Input\n              id=\"n_customers1\"\n              type=\"number\"\n              min={1}\n              value={inputs.n_customers1}\n              onChange={onChange(\"n_customers1\")}\n              className={inputClass}\n            />\n          </div>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"n_customers2\">Total Customers (type 2)</Label>\n            <Input\n              id=\"n_customers2\"\n              type=\"number\"\n              min={1}\n              value={inputs.n_customers2}\n              onChange={onChange(\"n_customers2\")}\n              className={inputClass}\n            />\n          </div>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"n_products_per_category\">Product Per Category (34 total category)</Label>\n            <Input\n              id=\"n_products_per_category\"\n              type=\"number\"\n              min={1}\n              value={inputs.n_products_per_category}\n              onChange={onChange(\"n_products_per_category\")}\n              className={inputClass}\n            />\n          </div>\n\n          <div className=\"flex flex-col gap-3 pt-2\">\n            <Button\n              onClick={start}\n              disabled={running}\n              className=\"w-full bg-[#DFD0B8] text-[#222831] hover:bg-[#FBBF24]/90\"\n            >\n              {running ? `Running… ${fmtElapsed(elapsed)}` : \"Submit\"}\n            </Button>\n\n            <Button\n              onClick={reset}\n              variant=\"secondary\"\n              disabled={!running && series.length === 0}\n              className=\"w-full bg-[#948979] text-black hover:bg-[#393E46]/30\"\n            >\n              Reset\n            </Button>\n\n            {/* Debug info */}\n            <div className=\"bg-green-900/20 border border-green-500/50 rounded p-3 text-xs h-40 overflow-y-auto overscroll-contain\"\n              ref={debugRef}>\n              <p className=\"text-green-300 font-medium top-0 bg-green-900/30 py-1\">\n                Debug Info:\n              </p>\n              <div className=\"space-y-1 text-green-200 mt-2\">\n                <p>API URL: /api/simulate/</p>\n                <p>Run ID: {runId || \"None\"}</p>\n                <p>Steps received: {series.length}</p>\n                {/* Optional: stream recent lines */}\n                {series.slice(-200).map((m, i) => (\n                  <p key={i} className=\"whitespace-pre-wrap break-words\">\n                    {JSON.stringify(m)}\n                  </p>\n                ))}\n              </div>\n\n            </div>\n\n\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Right panel: charts */}\n      <div className=\"lg:col-span-8 grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Avg purchases per customer type */}\n        <Card\n          className=\"border-[#948979] bg-[#222831] text-[#DFD0B8]\"\n          style={{ [\"--card-bg\" as any]: C.bg, [\"--card-fg\" as any]: C.axis }}\n        >\n          <CardHeader>\n            <CardTitle>Average Purchases per Customer Type</CardTitle>\n          </CardHeader>\n          <CardContent className=\"h-full w-full pt-4\">\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <RLineChart data={avgPurchasesSeries}>\n                <CartesianGrid stroke={C.grid} />\n                <XAxis\n                  dataKey=\"label\"\n                  axisLine={{ stroke: C.axis, strokeWidth: 1 }}\n                  tickLine={{ stroke: C.axis, strokeWidth: 1 }}\n                  tick={{ fill: C.axis, fontSize: 12 }}\n                  height={60}\n                />\n                <YAxis\n                  axisLine={{ stroke: C.axis, strokeWidth: 1 }}\n                  tickLine={{ stroke: C.axis, strokeWidth: 1 }}\n                  tick={{ fill: C.axis, fontSize: 12 }}\n                  width={60}\n                />\n                <Tooltip {...tooltipProps} />\n                <Legend wrapperStyle={{ color: C.axis }} />\n                <Line type=\"monotone\" dataKey=\"cust1\" name=\"Customers1\" stroke={C.accent1} strokeWidth={2.5} dot={false} />\n                <Line type=\"monotone\" dataKey=\"cust2\" name=\"Customers2\" stroke={C.accent2} strokeWidth={2.5} dot={false} />\n              </RLineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Total daily purchases */}\n        <Card\n          className=\"border-[#948979] bg-[#222831] text-[#DFD0B8]\"\n          style={{ [\"--card-bg\" as any]: C.bg, [\"--card-fg\" as any]: C.axis }}\n        >\n          <CardHeader>\n            <CardTitle>Total Daily Purchases</CardTitle>\n          </CardHeader>\n          <CardContent className=\"h-full w-full pt-4\">\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <RLineChart data={totalPurchasesSeries}>\n                <CartesianGrid stroke={C.grid} />\n                <XAxis\n                  dataKey=\"label\"\n                  axisLine={{ stroke: C.axis }}\n                  tickLine={{ stroke: C.axis }}\n                  tick={{ fill: C.axis }}\n                />\n                <YAxis\n                  axisLine={{ stroke: C.axis }}\n                  tickLine={{ stroke: C.axis }}\n                  tick={{ fill: C.axis }}\n                />\n                <Tooltip {...tooltipProps} />\n                <Line type=\"monotone\" dataKey=\"value\" name=\"Total Purchases\" stroke={C.accent2} strokeWidth={2.5} dot={false} />\n              </RLineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Totals bar chart */}\n        <Card\n          className=\"border-[#948979] bg-[#222831] text-[#DFD0B8]\"\n          style={{ [\"--card-bg\" as any]: C.bg, [\"--card-fg\" as any]: C.axis }}\n        >\n          <CardHeader>\n            <CardTitle>Total Count (Customers / Products)</CardTitle>\n          </CardHeader>\n          <CardContent className=\"h-full w-full pt-4\">\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <RBarChart data={totalsBar}>\n                <CartesianGrid stroke={C.grid} />\n                <XAxis\n                  dataKey=\"name\"\n                  axisLine={{ stroke: C.axis }}\n                  tickLine={{ stroke: C.axis }}\n                  tick={{ fill: C.axis }}\n                />\n                <YAxis\n                  axisLine={{ stroke: C.axis }}\n                  tickLine={{ stroke: C.axis }}\n                  tick={{ fill: C.axis }}\n                />\n                <Tooltip {...tooltipProps} />\n                <Bar dataKey=\"value\" name=\"Total\" fillOpacity={0.9}>\n                  {totalsBar.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={getBarColor(entry.name)} />\n                  ))}\n                </Bar>\n              </RBarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Stockout Rate */}\n        <Card\n          className=\"border-[#948979] bg-[#222831] text-[#DFD0B8]\"\n          style={{ [\"--card-bg\" as any]: C.bg, [\"--card-fg\" as any]: C.axis }}\n        >\n          <CardHeader>\n            <CardTitle>Stockout Rate (%)</CardTitle>\n          </CardHeader>\n          <CardContent className=\"h-full w-full pt-4\">\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <RLineChart data={stockoutSeries}>\n                <CartesianGrid stroke={C.grid} />\n                <XAxis\n                  dataKey=\"label\"\n                  axisLine={{ stroke: C.axis }}\n                  tickLine={{ stroke: C.axis }}\n                  tick={{ fill: C.axis }}\n                />\n                <YAxis\n                  axisLine={{ stroke: C.axis }}\n                  tickLine={{ stroke: C.axis }}\n                  tick={{ fill: C.axis }}\n                />\n                <Tooltip {...tooltipProps} />\n                <Line type=\"monotone\" dataKey=\"value\" name=\"Stockout %\" stroke={C.accent2} strokeWidth={2.5} dot={false} />\n              </RLineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n    </div >\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}